from telebot.async_telebot import AsyncTeleBot
from telebot.asyncio_storage import StateMemoryStorage
from telebot.asyncio_handler_backends import State, StatesGroup
import asyncio
import logging

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    level=logging.INFO,
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    handlers=[
        logging.FileHandler('bot.log'),
        logging.StreamHandler()
    ]
)
logger = logging.getLogger(__name__)

# –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏–π –±–æ—Ç–∞
class BotStates(StatesGroup):
    IDLE = State()                # –û–∂–∏–¥–∞–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã
    WAITING_DEED = State()        # –û–∂–∏–¥–∞–Ω–∏–µ –æ–ø–∏—Å–∞–Ω–∏—è –¥–æ–±—Ä–æ–≥–æ –¥–µ–ª–∞
    WAITING_POINTS = State()      # –û–∂–∏–¥–∞–Ω–∏–µ –≤–≤–æ–¥–∞ –±–∞–ª–ª–æ–≤
    PARENT_PASSWORD = State()     # –û–∂–∏–¥–∞–Ω–∏–µ –≤–≤–æ–¥–∞ –ø–∞—Ä–æ–ª—è —Ä–æ–¥–∏—Ç–µ–ª—è
    PARENT_MENU = State()         # –ú–µ–Ω—é —Ä–æ–¥–∏—Ç–µ–ª—è
    PARENT_ADD_CHILD = State()    # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ä–µ–±–µ–Ω–∫–∞
    PARENT_ADD_DEED = State()     # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –¥–µ–ª–∞ —Ä–µ–±–µ–Ω–∫—É (–æ–∂–∏–¥–∞–Ω–∏–µ –æ–ø–∏—Å–∞–Ω–∏—è)
    PARENT_ADD_POINTS = State()   # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –¥–µ–ª–∞ —Ä–µ–±–µ–Ω–∫—É (–æ–∂–∏–¥–∞–Ω–∏–µ –±–∞–ª–ª–æ–≤)

# –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä –±–æ—Ç–∞
TOKEN = '7369216646:AAGa1YcPHSTWiG6J1CHHRjJ_1OGlmp4Crh8'  # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –≤–∞—à —Ç–æ–∫–µ–Ω
bot = AsyncTeleBot(TOKEN, state_storage=StateMemoryStorage())

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    level=logging.INFO,
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    handlers=[
        logging.FileHandler('bot.log'),
        logging.StreamHandler()
    ]
)
logger = logging.getLogger(__name__)

# –ó–∞–≥—Ä—É–∑–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
load_dotenv()

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Django
os.environ.setdefault("DJANGO_SETTINGS_MODULE", "kindness_bot.settings")
django.setup()

# –ò–º–ø–æ—Ä—Ç –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –º–æ–¥—É–ª–µ–π –∏–∑ –≤–∞—à–µ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞
from bot.models import Child, KindDeed, Reward, Parent

# –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏–π –±–æ—Ç–∞
class BotStates(StatesGroup):
    IDLE = State()                # –û–∂–∏–¥–∞–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã
    WAITING_DEED = State()        # –û–∂–∏–¥–∞–Ω–∏–µ –æ–ø–∏—Å–∞–Ω–∏—è –¥–æ–±—Ä–æ–≥–æ –¥–µ–ª–∞
    WAITING_POINTS = State()      # –û–∂–∏–¥–∞–Ω–∏–µ –≤–≤–æ–¥–∞ –±–∞–ª–ª–æ–≤
    PARENT_PASSWORD = State()     # –û–∂–∏–¥–∞–Ω–∏–µ –≤–≤–æ–¥–∞ –ø–∞—Ä–æ–ª—è —Ä–æ–¥–∏—Ç–µ–ª—è
    PARENT_MENU = State()         # –ú–µ–Ω—é —Ä–æ–¥–∏—Ç–µ–ª—è
    PARENT_ADD_CHILD = State()    # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ä–µ–±–µ–Ω–∫–∞
    PARENT_ADD_DEED = State()     # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –¥–µ–ª–∞ —Ä–µ–±–µ–Ω–∫—É (–æ–∂–∏–¥–∞–Ω–∏–µ –æ–ø–∏—Å–∞–Ω–∏—è)
    PARENT_ADD_POINTS = State()   # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –¥–µ–ª–∞ —Ä–µ–±–µ–Ω–∫—É (–æ–∂–∏–¥–∞–Ω–∏–µ –±–∞–ª–ª–æ–≤)

# –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä –±–æ—Ç–∞ —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º —Ö—Ä–∞–Ω–∏–ª–∏—â–∞ —Å–æ—Å—Ç–æ—è–Ω–∏–π
TOKEN = os.environ.get('TELEGRAM_TOKEN')
bot = AsyncTeleBot(TOKEN, state_storage=StateMemoryStorage())

# –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å Django –≤ –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ–º —Ä–µ–∂–∏–º–µ
@sync_to_async
def get_or_create_child(telegram_id, name):
    return Child.objects.get_or_create(
        telegram_id=telegram_id,
        defaults={"name": name}
    )

@sync_to_async
def get_child(telegram_id):
    return Child.objects.get(telegram_id=telegram_id)

@sync_to_async
def get_recent_deeds(child, limit=5):
    return list(child.deeds.order_by('-created_at')[:limit])

@sync_to_async
def get_rewards():
    return list(Reward.objects.all().order_by('points_required'))

@sync_to_async
def create_deed(child, description, points, parent=None):
    return KindDeed.objects.create(
        child=child,
        description=description,
        points=points,
        added_by=parent
    )

@sync_to_async
def update_child_points(child, points):
    child.total_points += points
    child.save()
    return child.total_points

@sync_to_async
def get_or_create_parent(telegram_id, name):
    return Parent.objects.get_or_create(
        telegram_id=telegram_id,
        defaults={"name": name}
    )

@sync_to_async
def get_parent(telegram_id):
    try:
        return Parent.objects.get(telegram_id=telegram_id)
    except Parent.DoesNotExist:
        return None

@sync_to_async
def verify_parent(telegram_id):
    try:
        return Parent.objects.get(telegram_id=telegram_id), True
    except Parent.DoesNotExist:
        return None, False

@sync_to_async
def get_child_by_name(name):
    try:
        return Child.objects.get(name=name)
    except Child.DoesNotExist:
        return None
    except Child.MultipleObjectsReturned:
        return Child.objects.filter(name=name).first()

@sync_to_async
def is_parent_of_child(parent, child):
    return parent.children.filter(telegram_id=child.telegram_id).exists()

@sync_to_async
def set_parent_password(parent, password):
    """–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø–∞—Ä–æ–ª—è —Ä–æ–¥–∏—Ç–µ–ª—è"""
    import hashlib
    # –ü—Ä–æ—Å—Ç–æ–µ —Ö–µ—à–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–∞—Ä–æ–ª—è
    hashed_password = hashlib.sha256(password.encode()).hexdigest()
    parent.password = hashed_password
    parent.save()
    return parent

@sync_to_async
def verify_parent_password(parent, password):
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–∞—Ä–æ–ª—è —Ä–æ–¥–∏—Ç–µ–ª—è"""
    import hashlib
    hashed_password = hashlib.sha256(password.encode()).hexdigest()
    return parent.password == hashed_password

@sync_to_async
def get_parent_children(parent):
    """–ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –¥–µ—Ç–µ–π —Ä–æ–¥–∏—Ç–µ–ª—è"""
    return list(parent.children.all())

@sync_to_async
def add_child_to_parent(parent, child):
    """–ü—Ä–∏–≤—è–∑–∫–∞ —Ä–µ–±–µ–Ω–∫–∞ –∫ —Ä–æ–¥–∏—Ç–µ–ª—é"""
    parent.children.add(child)
    return True

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é
def get_main_menu_keyboard():
    keyboard = types.InlineKeyboardMarkup()
    keyboard.add(types.InlineKeyboardButton("üìù –î–æ–±–∞–≤–∏—Ç—å –¥–æ–±—Ä–æ–µ –¥–µ–ª–æ", callback_data="add_deed"))
    keyboard.add(types.InlineKeyboardButton("üåü –ú–æ–∏ –±–∞–ª–ª—ã", callback_data="check_points"))
    keyboard.add(types.InlineKeyboardButton("üéÅ –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –Ω–∞–≥—Ä–∞–¥—ã", callback_data="view_rewards"))
    keyboard.add(types.InlineKeyboardButton("‚ùì –ü–æ–º–æ—â—å", callback_data="help"))
    keyboard.add(types.InlineKeyboardButton("üë®‚Äçüë©‚Äçüëß‚Äçüë¶ –Ø —Ä–æ–¥–∏—Ç–µ–ª—å", callback_data="register_parent"))
    return keyboard

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
@bot.message_handler(commands=['start'])
async def start_command(message):
    user_id = message.from_user.id
    username = message.from_user.first_name
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∫–∞–∫ —Ä–µ–±–µ–Ω–æ–∫
    child, created = await get_or_create_child(user_id, username)
    
    welcome_text = (
        f"–ü—Ä–∏–≤–µ—Ç, {child.name}! üëã –≠—Ç–æ –±–æ—Ç –¥–ª—è –∑–∞–ø–∏—Å–∏ —Ç–≤–æ–∏—Ö –¥–æ–±—Ä—ã—Ö –¥–µ–ª.\n\n"
        f"–£ —Ç–µ–±—è —Å–µ–π—á–∞—Å *{child.total_points} –±–∞–ª–ª–æ–≤*.\n\n"
        "–í—ã–±–µ—Ä–∏ –¥–µ–π—Å—Ç–≤–∏–µ:"
    )
    
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ IDLE
    await bot.set_state(user_id, BotStates.IDLE, message.chat.id)
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π
    await bot.send_message(
        message.chat.id, 
        welcome_text, 
        parse_mode='Markdown',
        reply_markup=get_main_menu_keyboard()
    )

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /help
@bot.message_handler(commands=['help'])
async def help_command(message):
    help_text = (
        "üåà *–ë–æ—Ç –î–æ–±—Ä—ã—Ö –î–µ–ª* üåà\n\n"
        "–ó–¥–µ—Å—å —Ç—ã –º–æ–∂–µ—à—å –∑–∞–ø–∏—Å—ã–≤–∞—Ç—å —Å–≤–æ–∏ –¥–æ–±—Ä—ã–µ –¥–µ–ª–∞ –∏ –ø–æ–ª—É—á–∞—Ç—å –∑–∞ –Ω–∏—Ö –±–∞–ª–ª—ã!\n\n"
        "*–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:*\n\n"
        "/start - –ó–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞ –∏ –ø–æ–∫–∞–∑–∞—Ç—å –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é\n"
        "/add - –î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤–æ–µ –¥–æ–±—Ä–æ–µ –¥–µ–ª–æ\n"
        "/points - –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –º–æ–∏ –±–∞–ª–ª—ã\n"
        "/rewards - –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –Ω–∞–≥—Ä–∞–¥\n"
        "/parent - –†–µ–∂–∏–º —Ä–æ–¥–∏—Ç–µ–ª—è\n"
        "/help - –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É\n\n"
        "*–ö–∞–∫ —ç—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç:*\n"
        "1. –¢—ã –¥–µ–ª–∞–µ—à—å –¥–æ–±—Ä–æ–µ –¥–µ–ª–æ\n"
        "2. –ó–∞–ø–∏—Å—ã–≤–∞–µ—à—å –µ–≥–æ –≤ —ç—Ç–æ—Ç –±–æ—Ç –∏–ª–∏ —Ä–æ–¥–∏—Ç–µ–ª—å –¥–æ–±–∞–≤–ª—è–µ—Ç –µ–≥–æ\n"
        "3. –ù–∞–∫–∞–ø–ª–∏–≤–∞–µ—à—å –±–∞–ª–ª—ã\n"
        "4. –ü–æ–ª—É—á–∞–µ—à—å –∫–ª–∞—Å—Å–Ω—ã–µ –Ω–∞–≥—Ä–∞–¥—ã!\n\n"
        "*–í–æ–∑–º–æ–∂–Ω—ã–µ –Ω–∞–≥—Ä–∞–¥—ã:*\n"
        "‚Ä¢ 1000 –±–∞–ª–ª–æ–≤ - –û–±—ã—á–Ω–∞—è –∏–≥—Ä—É—à–∫–∞\n"
        "‚Ä¢ 3000 –±–∞–ª–ª–æ–≤ - –í–∑—è—Ç—å –ø—Ä–∏—Å—Ç–∞–≤–∫—É –Ω–∞ –≤—ã—Ö–æ–¥–Ω—ã–µ\n"
        "‚Ä¢ 5000 –±–∞–ª–ª–æ–≤ - –ö—Ä—É—Ç–∞—è –∏–≥—Ä—É—à–∫–∞\n"
        "‚Ä¢ 35000 –±–∞–ª–ª–æ–≤ - Nintendo Switch\n\n"
        "–î–µ–ª–∞–π –±–æ–ª—å—à–µ –¥–æ–±—Ä—ã—Ö –¥–µ–ª –∏ –ø–æ–ª—É—á–∞–π –Ω–∞–≥—Ä–∞–¥—ã! üéâ"
    )
    
    keyboard = types.InlineKeyboardMarkup()
    keyboard.add(types.InlineKeyboardButton("‚óÄÔ∏è –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é", callback_data="back_to_menu"))
    
    await bot.send_message(
        message.chat.id, 
        help_text, 
        parse_mode='Markdown',
        reply_markup=keyboard
    )

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /add
@bot.message_handler(commands=['add'])
async def add_command(message):
    user_id = message.from_user.id
    
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ WAITING_DEED
    await bot.set_state(user_id, BotStates.WAITING_DEED, message.chat.id)
    
    # –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –æ–ø–∏—Å–∞–Ω–∏–µ –¥–æ–±—Ä–æ–≥–æ –¥–µ–ª–∞
    await bot.send_message(message.chat.id, "üìù –û–ø–∏—à–∏ —Å–≤–æ–µ –¥–æ–±—Ä–æ–µ –¥–µ–ª–æ:")

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –æ–ø–∏—Å–∞–Ω–∏—è –¥–æ–±—Ä–æ–≥–æ –¥–µ–ª–∞
@bot.message_handler(state=BotStates.WAITING_DEED)
async def process_deed_description(message):
    user_id = message.from_user.id
    chat_id = message.chat.id
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ–ø–∏—Å–∞–Ω–∏–µ –¥–µ–ª–∞ –≤ –¥–∞–Ω–Ω—ã—Ö —Å–æ—Å—Ç–æ—è–Ω–∏—è
    async with bot.retrieve_data(user_id, chat_id) as data:
        data['deed_description'] = message.text
    
    # –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ –∑–∞–ø—Ä–æ—Å—É –±–∞–ª–ª–æ–≤
    await bot.set_state(user_id, BotStates.WAITING_POINTS, chat_id)
    await bot.send_message(chat_id, "üëç –û—Ç–ª–∏—á–Ω–æ! –¢–µ–ø–µ—Ä—å —É–∫–∞–∂–∏, —Å–∫–æ–ª—å–∫–æ –±–∞–ª–ª–æ–≤ —Ç—ã –ø–æ–ª—É—á–∏–ª –∑–∞ —ç—Ç–æ –¥–µ–ª–æ:")

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –±–∞–ª–ª–æ–≤
@bot.message_handler(state=BotStates.WAITING_POINTS)
async def process_deed_points(message):
    user_id = message.from_user.id
    chat_id = message.chat.id
    
    try:
        points = int(message.text)
        if points <= 0:
            await bot.send_message(chat_id, "‚ùå –ë–∞–ª–ª—ã –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–º —á–∏—Å–ª–æ–º. –ü–æ–ø—Ä–æ–±—É–π –µ—â–µ —Ä–∞–∑:")
            return
        
        # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        child = await get_child(user_id)
        
        # –ü–æ–ª—É—á–∞–µ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –¥–µ–ª–∞
        async with bot.retrieve_data(user_id, chat_id) as data:
            deed_description = data.get('deed_description', '–î–æ–±—Ä–æ–µ –¥–µ–ª–æ')
        
        # –°–æ–∑–¥–∞–µ–º –∑–∞–ø–∏—Å—å –æ –¥–æ–±—Ä–æ–º –¥–µ–ª–µ
        deed = await create_deed(
            child,
            deed_description,
            points
        )
        
        # –û–±–Ω–æ–≤–ª—è–µ–º –æ–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –±–∞–ª–ª–æ–≤
        total_points = await update_child_points(child, points)
        
        # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è —Å–ª–µ–¥—É—é—â–∏—Ö –¥–µ–π—Å—Ç–≤–∏–π
        keyboard = types.InlineKeyboardMarkup()
        keyboard.add(types.InlineKeyboardButton("üìù –î–æ–±–∞–≤–∏—Ç—å –µ—â–µ –¥–æ–±—Ä–æ–µ –¥–µ–ª–æ", callback_data="add_deed"))
        keyboard.add(types.InlineKeyboardButton("üè† –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é", callback_data="back_to_menu"))
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–º –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏
        await bot.send_message(
            chat_id,
            f"üéâ –û—Ç–ª–∏—á–Ω–æ! –î–æ–±—Ä–æ–µ –¥–µ–ª–æ '{deed_description}' –¥–æ–±–∞–≤–ª–µ–Ω–æ.\n\n"
            f"–¢—ã –ø–æ–ª—É—á–∏–ª *{points} –±–∞–ª–ª–æ–≤*!\n"
            f"–í—Å–µ–≥–æ —É —Ç–µ–±—è —Ç–µ–ø–µ—Ä—å *{total_points} –±–∞–ª–ª–æ–≤*.",
            parse_mode='Markdown',
            reply_markup=keyboard
        )
        
        # –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
        await bot.delete_state(user_id, chat_id)
        
    except ValueError:
        await bot.send_message(chat_id, "‚ùå –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏ —á–∏—Å–ª–æ. –ü–æ–ø—Ä–æ–±—É–π –µ—â–µ —Ä–∞–∑:")

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /points
@bot.message_handler(commands=['points'])
async def points_command(message):
    user_id = message.from_user.id
    chat_id = message.chat.id
    
    try:
        child = await get_child(user_id)
        recent_deeds = await get_recent_deeds(child)
        
        text = f"üåü –£ —Ç–µ–±—è —Å–µ–π—á–∞—Å *{child.total_points} –±–∞–ª–ª–æ–≤*! üåü\n\n"
        if recent_deeds:
            text += "üìã *–¢–≤–æ–∏ –ø–æ—Å–ª–µ–¥–Ω–∏–µ –¥–æ–±—Ä—ã–µ –¥–µ–ª–∞:*\n"
            for deed in recent_deeds:
                date_str = deed.created_at.strftime("%d.%m.%Y")
                text += f"‚Ä¢ {deed.description}: *{deed.points} –±–∞–ª–ª–æ–≤* ({date_str})\n"
        
        keyboard = types.InlineKeyboardMarkup()
        keyboard.add(types.InlineKeyboardButton("‚óÄÔ∏è –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é", callback_data="back_to_menu"))
        
        await bot.send_message(
            chat_id,
            text,
            parse_mode='Markdown',
            reply_markup=keyboard
        )
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –±–∞–ª–ª–æ–≤: {e}")
        await bot.send_message(chat_id, "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞—á–Ω–∏—Ç–µ —Å–Ω–∞—á–∞–ª–∞ —Å /start")

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /rewards
@bot.message_handler(commands=['rewards'])
async def rewards_command(message):
    chat_id = message.chat.id
    
    try:
        rewards = await get_rewards()
        
        if not rewards:
            text = "–ü–æ–∫–∞ –≤ –±–∞–∑–µ –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –Ω–∞–≥—Ä–∞–¥. –ù–æ —Ç—ã –º–æ–∂–µ—à—å –∫–æ–ø–∏—Ç—å –Ω–∞:\n\n"
            text += f"‚Ä¢ *–û–±—ã—á–Ω–∞—è –∏–≥—Ä—É—à–∫–∞*: 1000 –±–∞–ª–ª–æ–≤\n"
            text += f"‚Ä¢ *–ü—Ä–∏—Å—Ç–∞–≤–∫–∞ –Ω–∞ –≤—ã—Ö–æ–¥–Ω—ã–µ*: 3000 –±–∞–ª–ª–æ–≤\n"
            text += f"‚Ä¢ *–ö—Ä—É—Ç–∞—è –∏–≥—Ä—É—à–∫–∞*: 5000 –±–∞–ª–ª–æ–≤\n"
            text += f"‚Ä¢ *Nintendo Switch*: 35000 –±–∞–ª–ª–æ–≤\n"
        else:
            text = "üéÅ *–î–æ—Å—Ç—É–ø–Ω—ã–µ –Ω–∞–≥—Ä–∞–¥—ã:*\n\n"
            for reward in rewards:
                text += f"‚Ä¢ *{reward.name}*: {reward.points_required} –±–∞–ª–ª–æ–≤"
                if reward.description:
                    text += f" - {reward.description}"
                text += "\n"
        
        keyboard = types.InlineKeyboardMarkup()
        keyboard.add(types.InlineKeyboardButton("‚óÄÔ∏è –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é", callback_data="back_to_menu"))
        
        await bot.send_message(
            chat_id,
            text,
            parse_mode='Markdown',
            reply_markup=keyboard
        )
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –Ω–∞–≥—Ä–∞–¥: {e}")
        await bot.send_message(chat_id, "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞—á–Ω–∏—Ç–µ —Å–Ω–∞—á–∞–ª–∞ —Å /start")

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /parent
@bot.message_handler(commands=['parent'])
async def parent_command(message):
    user_id = message.from_user.id
    chat_id = message.chat.id
    
    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∫–∞–∫ —Ä–æ–¥–∏—Ç–µ–ª—å
        parent, is_parent = await verify_parent(user_id)
        
        if is_parent:
            # –†–æ–¥–∏—Ç–µ–ª—å —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –ø–∞—Ä–æ–ª—å
            await bot.send_message(chat_id, f"–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, {parent.name}! –î–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ —Ä–µ–∂–∏–º—É —Ä–æ–¥–∏—Ç–µ–ª—è, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å:")
            
            # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ PARENT_PASSWORD –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ–º —Ñ–ª–∞–≥, —á—Ç–æ —ç—Ç–æ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π —Ä–æ–¥–∏—Ç–µ–ª—å
            await bot.set_state(user_id, BotStates.PARENT_PASSWORD, chat_id)
            async with bot.retrieve_data(user_id, chat_id) as data:
                data['registering_parent'] = False
        else:
            # –ù–æ–≤—ã–π —Ä–æ–¥–∏—Ç–µ–ª—å, –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è
            await bot.send_message(
                chat_id,
                "–í—ã –µ—â–µ –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã –∫–∞–∫ —Ä–æ–¥–∏—Ç–µ–ª—å. –•–æ—Ç–∏—Ç–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è?\n\n"
                "–í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å, –∫–æ—Ç–æ—Ä—ã–π –±—É–¥–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –¥–ª—è –≤—Ö–æ–¥–∞ –≤ —Ä–µ–∂–∏–º —Ä–æ–¥–∏—Ç–µ–ª—è:"
            )
            
            # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ PARENT_PASSWORD –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ–º —Ñ–ª–∞–≥, —á—Ç–æ —ç—Ç–æ –Ω–æ–≤—ã–π —Ä–æ–¥–∏—Ç–µ–ª—å
            await bot.set_state(user_id, BotStates.PARENT_PASSWORD, chat_id)
            async with bot.retrieve_data(user_id, chat_id) as data:
                data['registering_parent'] = True
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∫–æ–º–∞–Ω–¥—ã parent: {e}")
        await bot.send_message(chat_id, "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞—á–Ω–∏—Ç–µ —Å–Ω–∞—á–∞–ª–∞ —Å /start")

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤–≤–æ–¥–∞ –ø–∞—Ä–æ–ª—è —Ä–æ–¥–∏—Ç–µ–ª—è
@bot.message_handler(state=BotStates.PARENT_PASSWORD)
async def process_parent_password(message):
    user_id = message.from_user.id
    chat_id = message.chat.id
    password = message.text
    
    try:
        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º, –Ω–æ–≤—ã–π —Ä–æ–¥–∏—Ç–µ–ª—å –∏–ª–∏ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π
        async with bot.retrieve_data(user_id, chat_id) as data:
            is_registering = data.get('registering_parent', False)
        
        if is_registering:
            # –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –Ω–æ–≤–æ–≥–æ —Ä–æ–¥–∏—Ç–µ–ª—è
            parent, created = await get_or_create_parent(user_id, message.from_user.first_name)
            await set_parent_password(parent, password)
            
            # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –º–µ–Ω—é —Ä–æ–¥–∏—Ç–µ–ª—è
            keyboard = types.InlineKeyboardMarkup()
            keyboard.add(types.InlineKeyboardButton("‚ûï –î–æ–±–∞–≤–∏—Ç—å —Ä–µ–±–µ–Ω–∫–∞", callback_data="add_child"))
            keyboard.add(types.InlineKeyboardButton("üìä –ü—Ä–æ—Å–º–æ—Ç—Ä —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –¥–µ—Ç–µ–π", callback_data="view_children"))
            keyboard.add(types.InlineKeyboardButton("üè† –í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="exit_parent_mode"))
            
            await bot.send_message(
                chat_id,
                f"üéâ –ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! –í—ã –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã –∫–∞–∫ —Ä–æ–¥–∏—Ç–µ–ª—å.\n\n"
                "–¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ –¥–æ–±–∞–≤–ª—è—Ç—å –¥–æ–±—Ä—ã–µ –¥–µ–ª–∞ –≤–∞—à–∏–º –¥–µ—Ç—è–º –∏ —Å–ª–µ–¥–∏—Ç—å –∑–∞ –∏—Ö –ø—Ä–æ–≥—Ä–µ—Å—Å–æ–º.",
                reply_markup=keyboard
            )
            
            # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ PARENT_MENU
            await bot.set_state(user_id, BotStates.PARENT_MENU, chat_id)
        else:
            # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–∞—Ä–æ–ª—è —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ —Ä–æ–¥–∏—Ç–µ–ª—è
            parent = await get_parent(user_id)
            if parent:
                is_valid = await verify_parent_password(parent, password)
                
                if is_valid:
                    # –ü–∞—Ä–æ–ª—å –≤–µ—Ä–Ω—ã–π, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –º–µ–Ω—é —Ä–æ–¥–∏—Ç–µ–ª—è
                    children = await get_parent_children(parent)
                    
                    # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –º–µ–Ω—é —Ä–æ–¥–∏—Ç–µ–ª—è
                    keyboard = types.InlineKeyboardMarkup()
                    if children:
                        keyboard.add(types.InlineKeyboardButton("‚ûï –î–æ–±–∞–≤–∏—Ç—å –¥–æ–±—Ä–æ–µ –¥–µ–ª–æ —Ä–µ–±–µ–Ω–∫—É", callback_data="add_deed_to_child"))
                        keyboard.add(types.InlineKeyboardButton("üìä –ü—Ä–æ—Å–º–æ—Ç—Ä —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –¥–µ—Ç–µ–π", callback_data="view_children"))
                    
                    keyboard.add(types.InlineKeyboardButton("‚ûï –î–æ–±–∞–≤–∏—Ç—å —Ä–µ–±–µ–Ω–∫–∞", callback_data="add_child"))
                    keyboard.add(types.InlineKeyboardButton("üè† –í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="exit_parent_mode"))
                    
                    await bot.send_message(
                        chat_id,
                        f"üëã –ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, {parent.name}! –í—ã –≤–æ—à–ª–∏ –≤ —Ä–µ–∂–∏–º —Ä–æ–¥–∏—Ç–µ–ª—è.\n\n"
                        f"–£ –≤–∞—Å {len(children)} {'–¥–µ—Ç–µ–π' if len(children) != 1 else '—Ä–µ–±–µ–Ω–æ–∫'} –≤ —Å–∏—Å—Ç–µ–º–µ.\n\n"
                        "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:",
                        reply_markup=keyboard
                    )
                    
                    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ PARENT_MENU
                    await bot.set_state(user_id, BotStates.PARENT_MENU, chat_id)
                else:
                    # –ü–∞—Ä–æ–ª—å –Ω–µ–≤–µ—Ä–Ω—ã–π
                    await bot.send_message(
                        chat_id,
                        "‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –ø–∞—Ä–æ–ª—å. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑ –∏–ª–∏ –≤–≤–µ–¥–∏—Ç–µ /cancel –¥–ª—è –æ—Ç–º–µ–Ω—ã."
                    )
            else:
                # –†–æ–¥–∏—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω, –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è
                await bot.send_message(
                    chat_id,
                    "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: —Ä–æ–¥–∏—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞—á–Ω–∏—Ç–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é –∑–∞–Ω–æ–≤–æ —Å /parent"
                )
                await bot.delete_state(user_id, chat_id)
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –ø–∞—Ä–æ–ª—è —Ä–æ–¥–∏—Ç–µ–ª—è: {e}")
        await bot.send_message(chat_id, "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞—á–Ω–∏—Ç–µ —Å–Ω–∞—á–∞–ª–∞ —Å /start")
        await bot.delete_state(user_id, chat_id)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ callback-–∑–∞–ø—Ä–æ—Å–æ–≤ (–Ω–∞–∂–∞—Ç–∏–π –Ω–∞ –∫–Ω–æ–ø–∫–∏)
@bot.callback_query_handler(func=lambda call: True)
async def process_callback(call):
    user_id = call.from_user.id
    chat_id = call.message.chat.id
    
    try:
        # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ "–î–æ–±–∞–≤–∏—Ç—å –¥–æ–±—Ä–æ–µ –¥–µ–ª–æ"
        if call.data == "add_deed":
            # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ WAITING_DEED
            await bot.set_state(user_id, BotStates.WAITING_DEED, chat_id)
            
            # –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –æ–ø–∏—Å–∞–Ω–∏–µ –¥–æ–±—Ä–æ–≥–æ –¥–µ–ª–∞
            await bot.send_message(chat_id, "üìù –û–ø–∏—à–∏ —Å–≤–æ–µ –¥–æ–±—Ä–æ–µ –¥–µ–ª–æ:")
            
            # –û—Ç–≤–µ—á–∞–µ–º –Ω–∞ callback
            await bot.answer_callback_query(call.id)
        
        # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ "–ú–æ–∏ –±–∞–ª–ª—ã"
        elif call.data == "check_points":
            try:
                child = await get_child(user_id)
                recent_deeds = await get_recent_deeds(child)
                
                text = f"üåü –£ —Ç–µ–±—è —Å–µ–π—á–∞—Å *{child.total_points} –±–∞–ª–ª–æ–≤*! üåü\n\n"
                if recent_deeds:
                    text += "üìã *–¢–≤–æ–∏ –ø–æ—Å–ª–µ–¥–Ω–∏–µ –¥–æ–±—Ä—ã–µ –¥–µ–ª–∞:*\n"
                    for deed in recent_deeds:
                        date_str = deed.created_at.strftime("%d.%m.%Y")
                        text += f"‚Ä¢ {deed.description}: *{deed.points} –±–∞–ª–ª–æ–≤* ({date_str})\n"
                
                keyboard = types.InlineKeyboardMarkup()
                keyboard.add(types.InlineKeyboardButton("‚óÄÔ∏è –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é", callback_data="back_to_menu"))
                
                await bot.edit_message_text(
                    text,
                    chat_id,
                    call.message.message_id,
                    parse_mode='Markdown',
                    reply_markup=keyboard
                )
            except Exception as e:
                logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ—Å–º–æ—Ç—Ä–µ –±–∞–ª–ª–æ–≤: {e}")
                await bot.send_message(chat_id, "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞—á–Ω–∏—Ç–µ —Å–Ω–∞—á–∞–ª–∞ —Å /start")
            
            await bot.answer_callback_query(call.id)
        
        # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ "–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –Ω–∞–≥—Ä–∞–¥—ã"
        elif call.data == "view_rewards":
            try:
                rewards = await get_rewards()
                
                if not rewards:
                    text = "–ü–æ–∫–∞ –≤ –±–∞–∑–µ –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –Ω–∞–≥—Ä–∞–¥. –ù–æ —Ç—ã –º–æ–∂–µ—à—å –∫–æ–ø–∏—Ç—å –Ω–∞:\n\n"
                    text += f"‚Ä¢ *–û–±—ã—á–Ω–∞—è –∏–≥—Ä—É—à–∫–∞*: 1000 –±–∞–ª–ª–æ–≤\n"
                    text += f"‚Ä¢ *–ü—Ä–∏—Å—Ç–∞–≤–∫–∞ –Ω–∞ –≤—ã—Ö–æ–¥–Ω—ã–µ*: 3000 –±–∞–ª–ª–æ–≤\n"
                    text += f"‚Ä¢ *–ö—Ä—É—Ç–∞—è –∏–≥—Ä—É—à–∫–∞*: 5000 –±–∞–ª–ª–æ–≤\n"
                    text += f"‚Ä¢ *Nintendo Switch*: 35000 –±–∞–ª–ª–æ–≤\n"
                else:
                    text = "üéÅ *–î–æ—Å—Ç—É–ø–Ω—ã–µ –Ω–∞–≥—Ä–∞–¥—ã:*\n\n"
                    for reward in rewards:
                        text += f"‚Ä¢ *{reward.name}*: {reward.points_required} –±–∞–ª–ª–æ–≤"
                        if reward.description:
                            text += f" - {reward.description}"
                        text += "\n"
                
                keyboard = types.InlineKeyboardMarkup()
                keyboard.add(types.InlineKeyboardButton("‚óÄÔ∏è –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é", callback_data="back_to_menu"))
                
                await bot.edit_message_text(
                    text,
                    chat_id,
                    call.message.message_id,
                    parse_mode='Markdown',
                    reply_markup=keyboard
                )
            except Exception as e:
                logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ—Å–º–æ—Ç—Ä–µ –Ω–∞–≥—Ä–∞–¥: {e}")
                await bot.send_message(chat_id, "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞—á–Ω–∏—Ç–µ —Å–Ω–∞—á–∞–ª–∞ —Å /start")
            
            await bot.answer_callback_query(call.id)
        
        # ... –¥–æ–±–∞–≤—å—Ç–µ –æ—Å—Ç–∞–ª—å–Ω—ã–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ callback-–æ–≤ ...
        
        # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ "–ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é"
        elif call.data == "back_to_menu":
            # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            child = await get_child(user_id)
            
            text = (
                f"–ü—Ä–∏–≤–µ—Ç, {child.name}! üëã –≠—Ç–æ –±–æ—Ç –¥–ª—è –∑–∞–ø–∏—Å–∏ —Ç–≤–æ–∏—Ö –¥–æ–±—Ä—ã—Ö –¥–µ–ª.\n\n"
                f"–£ —Ç–µ–±—è —Å–µ–π—á–∞—Å *{child.total_points} –±–∞–ª–ª–æ–≤*.\n\n"
                "–í—ã–±–µ—Ä–∏ –¥–µ–π—Å—Ç–≤–∏–µ:"
            )
            
            # –†–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –≥–ª–∞–≤–Ω—ã–º –º–µ–Ω—é
            await bot.edit_message_text(
                text,
                chat_id,
                call.message.message_id,
                parse_mode='Markdown',
                reply_markup=get_main_menu_keyboard()
            )
            
            # –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
            await bot.delete_state(user_id, chat_id)
            
            await bot.answer_callback_query(call.id)
        
        # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ "–Ø —Ä–æ–¥–∏—Ç–µ–ª—å"
        elif call.data == "register_parent":
            # –ï—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏–∑ –≥—Ä—É–ø–ø—ã
            if call.message.chat.type in ['group', 'supergroup']:
                await bot.send_message(
                    chat_id,
                    f"@{call.from_user.username}, –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –∫–∞–∫ —Ä–æ–¥–∏—Ç–µ–ª—å, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞–ø–∏—à–∏—Ç–µ –±–æ—Ç—É –≤ –ª–∏—á–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è."
                )
            else:
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∫–∞–∫ —Ä–æ–¥–∏—Ç–µ–ª—å
                parent, is_parent = await verify_parent(user_id)
                
                if is_parent:
                    # –†–æ–¥–∏—Ç–µ–ª—å —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –ø–∞—Ä–æ–ª—å
                    await bot.send_message(chat_id, f"–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, {parent.name}! –î–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ —Ä–µ–∂–∏–º—É —Ä–æ–¥–∏—Ç–µ–ª—è, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å:")
                    
                    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ PARENT_PASSWORD
                    await bot.set_state(user_id, BotStates.PARENT_PASSWORD, chat_id)
                    async with bot.retrieve_data(user_id, chat_id) as data:
                        data['registering_parent'] = False
                else:
                    # –ù–æ–≤—ã–π —Ä–æ–¥–∏—Ç–µ–ª—å, –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è
                    await bot.send_message(
                        chat_id,
                        "–í—ã –µ—â–µ –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã –∫–∞–∫ —Ä–æ–¥–∏—Ç–µ–ª—å. –•–æ—Ç–∏—Ç–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è?\n\n"
                        "–í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å, –∫–æ—Ç–æ—Ä—ã–π –±—É–¥–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –¥–ª—è –≤—Ö–æ–¥–∞ –≤ —Ä–µ–∂–∏–º —Ä–æ–¥–∏—Ç–µ–ª—è:"
                    )
                    
                    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ PARENT_PASSWORD
                    await bot.set_state(user_id, BotStates.PARENT_PASSWORD, chat_id)
                    async with bot.retrieve_data(user_id, chat_id) as data:
                        data['registering_parent'] = True
            
            await bot.answer_callback_query(call.id)
        
        # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ "–î–æ–±–∞–≤–∏—Ç—å —Ä–µ–±–µ–Ω–∫–∞"
        elif call.data == "add_child":
            await bot.send_message(
                chat_id,
                "üë∂ –í–≤–µ–¥–∏—Ç–µ –∏–º—è —Ä–µ–±–µ–Ω–∫–∞, –∫–æ—Ç–æ—Ä–æ–≥–æ —Ö–æ—Ç–∏—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å:"
            )
            
            # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ PARENT_ADD_CHILD
            await bot.set_state(user_id, BotStates.PARENT_ADD_CHILD, chat_id)
            
            await bot.answer_callback_query(call.id)
        
        # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ "–ü—Ä–æ—Å–º–æ—Ç—Ä —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –¥–µ—Ç–µ–π"
        elif call.data == "view_children":
            try:
                parent = await get_parent(user_id)
                if parent:
                    children = await get_parent_children(parent)
                    
                    if not children:
                        keyboard = types.InlineKeyboardMarkup()
                        keyboard.add(types.InlineKeyboardButton("‚ûï –î–æ–±–∞–≤–∏—Ç—å —Ä–µ–±–µ–Ω–∫–∞", callback_data="add_child"))
                        keyboard.add(types.InlineKeyboardButton("üè† –í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="exit_parent_mode"))
                        
                        await bot.send_message(
                            chat_id,
                            "–£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç –¥–æ–±–∞–≤–ª–µ–Ω–Ω—ã—Ö –¥–µ—Ç–µ–π. –î–æ–±–∞–≤—å—Ç–µ —Ä–µ–±–µ–Ω–∫–∞, —á—Ç–æ–±—ã –≤–∏–¥–µ—Ç—å –µ–≥–æ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É.",
                            reply_markup=keyboard
                        )
                    else:
                        text = "üìä *–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –≤–∞—à–∏—Ö –¥–µ—Ç–µ–π:*\n\n"
                        for child in children:
                            recent_deeds = await get_recent_deeds(child, limit=3)
                            
                            text += f"üë∂ *{child.name}*: {child.total_points} –±–∞–ª–ª–æ–≤\n"
                            if recent_deeds:
                                text += "–ü–æ—Å–ª–µ–¥–Ω–∏–µ –¥–æ–±—Ä—ã–µ –¥–µ–ª–∞:\n"
                                for deed in recent_deeds:
                                    date_str = deed.created_at.strftime("%d.%m.%Y")
                                    text += f"‚Ä¢ {deed.description}: {deed.points} –±–∞–ª–ª–æ–≤ ({date_str})\n"
                            text += "\n"
                        
                        keyboard = types.InlineKeyboardMarkup()
                        keyboard.add(types.InlineKeyboardButton("‚ûï –î–æ–±–∞–≤–∏—Ç—å –¥–æ–±—Ä–æ–µ –¥–µ–ª–æ", callback_data="add_deed_to_child"))
                        keyboard.add(types.InlineKeyboardButton("‚óÄÔ∏è –ù–∞–∑–∞–¥", callback_data="back_to_parent_menu"))
                        
                        await bot.send_message(
                            chat_id,
                            text,
                            parse_mode='Markdown',
                            reply_markup=keyboard
                        )
                else:
                    await bot.send_message(
                        chat_id,
                        "‚ùå –û—à–∏–±–∫–∞: —Ä–æ–¥–∏—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞—á–Ω–∏—Ç–µ —Å /parent."
                    )
            except Exception as e:
                logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ—Å–º–æ—Ç—Ä–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –¥–µ—Ç–µ–π: {e}")
                await bot.send_message(
                    chat_id,
                    "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑."
                )
            
            await bot.answer_callback_query(call.id)
        
        # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ "–î–æ–±–∞–≤–∏—Ç—å –¥–æ–±—Ä–æ–µ –¥–µ–ª–æ —Ä–µ–±–µ–Ω–∫—É"
        elif call.data == "add_deed_to_child":
            try:
                parent = await get_parent(user_id)
                if parent:
                    children = await get_parent_children(parent)
                    
                    if not children:
                        keyboard = types.InlineKeyboardMarkup()
                        keyboard.add(types.InlineKeyboardButton("‚ûï –î–æ–±–∞–≤–∏—Ç—å —Ä–µ–±–µ–Ω–∫–∞", callback_data="add_child"))
                        keyboard.add(types.InlineKeyboardButton("üè† –í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="exit_parent_mode"))
                        
                        await bot.send_message(
                            chat_id,
                            "–£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç –¥–æ–±–∞–≤–ª–µ–Ω–Ω—ã—Ö –¥–µ—Ç–µ–π. –î–æ–±–∞–≤—å—Ç–µ —Ä–µ–±–µ–Ω–∫–∞, —á—Ç–æ–±—ã –¥–æ–±–∞–≤–ª—è—Ç—å –µ–º—É –¥–æ–±—Ä—ã–µ –¥–µ–ª–∞.",
                            reply_markup=keyboard
                        )
                    else:
                        # –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫–∏ –¥–ª—è –≤—ã–±–æ—Ä–∞ —Ä–µ–±–µ–Ω–∫–∞
                        keyboard = types.InlineKeyboardMarkup()
                        for child in children:
                            keyboard.add(types.InlineKeyboardButton(f"üë∂ {child.name}", callback_data=f"select_child_{child.telegram_id}"))
                        
                        keyboard.add(types.InlineKeyboardButton("‚óÄÔ∏è –ù–∞–∑–∞–¥", callback_data="back_to_parent_menu"))
                        
                        await bot.send_message(
                            chat_id,
                            "–í—ã–±–µ—Ä–∏—Ç–µ —Ä–µ–±–µ–Ω–∫–∞, –∫–æ—Ç–æ—Ä–æ–º—É —Ö–æ—Ç–∏—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å –¥–æ–±—Ä–æ–µ –¥–µ–ª–æ:",
                            reply_markup=keyboard
                        )
                else:
                    await bot.send_message(
                        chat_id,
                        "‚ùå –û—à–∏–±–∫–∞: —Ä–æ–¥–∏—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞—á–Ω–∏—Ç–µ —Å /parent."
                    )
            except Exception as e:
                logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–±–æ—Ä–µ —Ä–µ–±–µ–Ω–∫–∞: {e}")
                await bot.send_message(
                    chat_id,
                    "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑."
                )
            
            await bot.answer_callback_query(call.id)
        
        # –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ —Ä–µ–±–µ–Ω–∫–∞ (—Ñ–æ—Ä–º–∞—Ç: select_child_TELEGRAM_ID)
        elif call.data.startswith("select_child_"):
            try:
                child_telegram_id = int(call.data.split("_")[-1])
                child = await get_child(child_telegram_id)
                
                # –°–æ—Ö—Ä–∞–Ω—è–µ–º ID –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ —Ä–µ–±–µ–Ω–∫–∞
                await bot.set_state(user_id, BotStates.PARENT_ADD_DEED, chat_id)
                async with bot.retrieve_data(user_id, chat_id) as data:
                    data['selected_child_id'] = child_telegram_id
                
                await bot.send_message(
                    chat_id,
                    f"–í—ã –≤—ã–±—Ä–∞–ª–∏ —Ä–µ–±–µ–Ω–∫–∞: *{child.name}*\n\n"
                    "–û–ø–∏—à–∏—Ç–µ –¥–æ–±—Ä–æ–µ –¥–µ–ª–æ, –∫–æ—Ç–æ—Ä–æ–µ —Å–æ–≤–µ—Ä—à–∏–ª —Ä–µ–±–µ–Ω–æ–∫:",
                    parse_mode='Markdown'
                )
            except Exception as e:
                logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–±–æ—Ä–µ —Ä–µ–±–µ–Ω–∫–∞: {e}")
                await bot.send_message(
                    chat_id,
                    "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑."
                )
            
            await bot.answer_callback_query(call.id)
        
        # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ "–ù–∞–∑–∞–¥" –≤ –º–µ–Ω—é —Ä–æ–¥–∏—Ç–µ–ª—è
        elif call.data == "back_to_parent_menu":
            try:
                parent = await get_parent(user_id)
                if parent:
                    children = await get_parent_children(parent)
                    
                    # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –º–µ–Ω—é —Ä–æ–¥–∏—Ç–µ–ª—è
                    keyboard = types.InlineKeyboardMarkup()
                    if children:
                        keyboard.add(types.InlineKeyboardButton("‚ûï –î–æ–±–∞–≤–∏—Ç—å –¥–æ–±—Ä–æ–µ –¥–µ–ª–æ —Ä–µ–±–µ–Ω–∫—É", callback_data="add_deed_to_child"))
                        keyboard.add(types.InlineKeyboardButton("üìä –ü—Ä–æ—Å–º–æ—Ç—Ä —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –¥–µ—Ç–µ–π", callback_data="view_children"))
                    
                    keyboard.add(types.InlineKeyboardButton("‚ûï –î–æ–±–∞–≤–∏—Ç—å —Ä–µ–±–µ–Ω–∫–∞", callback_data="add_child"))
                    keyboard.add(types.InlineKeyboardButton("üè† –í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="exit_parent_mode"))
                    
                    await bot.send_message(
                        chat_id,
                        f"üëã –ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, {parent.name}! –í—ã –≤ —Ä–µ–∂–∏–º–µ —Ä–æ–¥–∏—Ç–µ–ª—è.\n\n"
                        f"–£ –≤–∞—Å {len(children)} {'–¥–µ—Ç–µ–π' if len(children) != 1 else '—Ä–µ–±–µ–Ω–æ–∫'} –≤ —Å–∏—Å—Ç–µ–º–µ.\n\n"
                        "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:",
                        reply_markup=keyboard
                    )
                else:
                    await bot.send_message(
                        chat_id,
                        "‚ùå –û—à–∏–±–∫–∞: —Ä–æ–¥–∏—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞—á–Ω–∏—Ç–µ —Å /parent."
                    )
            except Exception as e:
                logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤–æ–∑–≤—Ä–∞—Ç–µ –≤ –º–µ–Ω—é —Ä–æ–¥–∏—Ç–µ–ª—è: {e}")
                await bot.send_message(
                    chat_id,
                    "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑."
                )
            
            await bot.answer_callback_query(call.id)
        
        # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ "–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é" –∏–∑ —Ä–µ–∂–∏–º–∞ —Ä–æ–¥–∏—Ç–µ–ª—è
        elif call.data == "exit_parent_mode":
            await bot.send_message(
                chat_id,
                "–í—ã –≤—ã—à–ª–∏ –∏–∑ —Ä–µ–∂–∏–º–∞ —Ä–æ–¥–∏—Ç–µ–ª—è. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /start –¥–ª—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã —Å –±–æ—Ç–æ–º."
            )
            
            # –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
            await bot.delete_state(user_id, chat_id)
            
            await bot.answer_callback_query(call.id)
        
        # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ "–ü–æ–º–æ—â—å"
        elif call.data == "help":
            help_text = (
                "üåà *–ë–æ—Ç –î–æ–±—Ä—ã—Ö –î–µ–ª* üåà\n\n"
                "–ó–¥–µ—Å—å —Ç—ã –º–æ–∂–µ—à—å –∑–∞–ø–∏—Å—ã–≤–∞—Ç—å —Å–≤–æ–∏ –¥–æ–±—Ä—ã–µ –¥–µ–ª–∞ –∏ –ø–æ–ª—É—á–∞—Ç—å –∑–∞ –Ω–∏—Ö –±–∞–ª–ª—ã!\n\n"
                "*–ö–∞–∫ —ç—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç:*\n"
                "1. –¢—ã –¥–µ–ª–∞–µ—à—å –¥–æ–±—Ä–æ–µ –¥–µ–ª–æ\n"
                "2. –ó–∞–ø–∏—Å—ã–≤–∞–µ—à—å –µ–≥–æ –≤ —ç—Ç–æ—Ç –±–æ—Ç\n"
                "3. –ù–∞–∫–∞–ø–ª–∏–≤–∞–µ—à—å –±–∞–ª–ª—ã\n"
                "4. –ü–æ–ª—É—á–∞–µ—à—å –∫–ª–∞—Å—Å–Ω—ã–µ –Ω–∞–≥—Ä–∞–¥—ã!\n\n"
                "*–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:*\n"
                "/start - –ó–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞ –∏ –ø–æ–∫–∞–∑–∞—Ç—å –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é\n"
                "/add - –î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤–æ–µ –¥–æ–±—Ä–æ–µ –¥–µ–ª–æ\n"
                "/points - –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –º–æ–∏ –±–∞–ª–ª—ã\n"
                "/rewards - –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –Ω–∞–≥—Ä–∞–¥\n"
                "/parent - –†–µ–∂–∏–º —Ä–æ–¥–∏—Ç–µ–ª—è\n"
                "/help - –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É\n"
            )
            
            keyboard = types.InlineKeyboardMarkup()
            keyboard.add(types.InlineKeyboardButton("‚óÄÔ∏è –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é", callback_data="back_to_menu"))
            
            await bot.edit_message_text(
                help_text,
                chat_id,
                call.message.message_id,
                parse_mode='Markdown',
                reply_markup=keyboard
            )
            
            await bot.answer_callback_query(call.id)
        
        # –ï—Å–ª–∏ –Ω–µ —Ä–∞—Å–ø–æ–∑–Ω–∞–ª–∏ callback_data
        else:
            logger.warning(f"–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π callback_data: {call.data}")
            await bot.answer_callback_query(call.id, "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞")
    
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ callback_query: {e}")
        await bot.answer_callback_query(call.id, "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞")

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ä–µ–±–µ–Ω–∫–∞ —Ä–æ–¥–∏—Ç–µ–ª–µ–º
@bot.message_handler(state=BotStates.PARENT_ADD_CHILD)
async def process_add_child(message):
    user_id = message.from_user.id
    chat_id = message.chat.id
    child_name = message.text.strip()
    
    try:
        parent = await get_parent(user_id)
        if parent:
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —Ä–µ–±–µ–Ω–æ–∫ —Å —Ç–∞–∫–∏–º –∏–º–µ–Ω–µ–º
            child = await get_child_by_name(child_name)
            
            if child:
                # –ï—Å–ª–∏ —Ä–µ–±–µ–Ω–æ–∫ –Ω–∞–π–¥–µ–Ω, –ø—Ä–∏–≤—è–∑—ã–≤–∞–µ–º –µ–≥–æ –∫ —Ä–æ–¥–∏—Ç–µ–ª—é
                await add_child_to_parent(parent, child)
                
                await bot.send_message(
                    chat_id,
                    f"‚úÖ –†–µ–±–µ–Ω–æ–∫ *{child.name}* —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω!\n\n"
                    f"–£ –Ω–µ–≥–æ —Å–µ–π—á–∞—Å *{child.total_points} –±–∞–ª–ª–æ–≤*.\n\n"
                    "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /parent –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –º–µ–Ω—é —Ä–æ–¥–∏—Ç–µ–ª—è.",
                    parse_mode='Markdown'
                )
            else:
                # –ï—Å–ª–∏ —Ä–µ–±–µ–Ω–æ–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω, –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å –µ–≥–æ —á–µ—Ä–µ–∑ –±–æ—Ç–∞
                await bot.send_message(
                    chat_id,
                    f"‚ùì –†–µ–±–µ–Ω–æ–∫ —Å –∏–º–µ–Ω–µ–º '{child_name}' –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ —Å–∏—Å—Ç–µ–º–µ.\n\n"
                    "–ü–æ–ø—Ä–æ—Å–∏—Ç–µ —Ä–µ–±–µ–Ω–∫–∞ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è –≤ –±–æ—Ç–µ —Å –ø–æ–º–æ—â—å—é –∫–æ–º–∞–Ω–¥—ã /start, "
                    "–∞ –∑–∞—Ç–µ–º –¥–æ–±–∞–≤—å—Ç–µ –µ–≥–æ —Å–Ω–æ–≤–∞.\n\n"
                    "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /parent –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –º–µ–Ω—é —Ä–æ–¥–∏—Ç–µ–ª—è."
                )
            
            # –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
            await bot.delete_state(user_id, chat_id)
        else:
            await bot.send_message(
                chat_id,
                "‚ùå –û—à–∏–±–∫–∞: —Ä–æ–¥–∏—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞—á–Ω–∏—Ç–µ —Å /parent."
            )
            await bot.delete_state(user_id, chat_id)
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ —Ä–µ–±–µ–Ω–∫–∞: {e}")
        await bot.send_message(
            chat_id,
            "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑ –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ /start –¥–ª—è –Ω–∞—á–∞–ª–∞."
        )
        await bot.delete_state(user_id, chat_id)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –æ–ø–∏—Å–∞–Ω–∏—è –¥–æ–±—Ä–æ–≥–æ –¥–µ–ª–∞ –æ—Ç —Ä–æ–¥–∏—Ç–µ–ª—è
@bot.message_handler(state=BotStates.PARENT_ADD_DEED)
async def process_parent_deed_description(message):
    user_id = message.from_user.id
    chat_id = message.chat.id
    
    try:
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ–ø–∏—Å–∞–Ω–∏–µ –¥–µ–ª–∞
        async with bot.retrieve_data(user_id, chat_id) as data:
            data['deed_description'] = message.text
        
        await bot.send_message(
            chat_id,
            "üëç –û—Ç–ª–∏—á–Ω–æ! –¢–µ–ø–µ—Ä—å —É–∫–∞–∂–∏—Ç–µ, —Å–∫–æ–ª—å–∫–æ –±–∞–ª–ª–æ–≤ –ø–æ–ª—É—á–∞–µ—Ç —Ä–µ–±–µ–Ω–æ–∫ –∑–∞ —ç—Ç–æ –¥–µ–ª–æ:"
        )
        
        # –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
        await bot.set_state(user_id, BotStates.PARENT_ADD_POINTS, chat_id)
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –æ–ø–∏—Å–∞–Ω–∏—è –¥–µ–ª–∞: {e}")
        await bot.send_message(
            chat_id,
            "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑ –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ /start –¥–ª—è –Ω–∞—á–∞–ª–∞."
        )
        await bot.delete_state(user_id, chat_id)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –±–∞–ª–ª–æ–≤ –æ—Ç —Ä–æ–¥–∏—Ç–µ–ª—è
@bot.message_handler(state=BotStates.PARENT_ADD_POINTS)
async def process_parent_deed_points(message):
    user_id = message.from_user.id
    chat_id = message.chat.id
    
    try:
        points = int(message.text)
        if points <= 0:
            await bot.send_message(
                chat_id,
                "‚ùå –ë–∞–ª–ª—ã –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–º —á–∏—Å–ª–æ–º. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑:"
            )
            return
        
        # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ —Ä–æ–¥–∏—Ç–µ–ª—è –∏ —Ä–µ–±–µ–Ω–∫–∞ –∏–∑ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω–æ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è
        parent = await get_parent(user_id)
        async with bot.retrieve_data(user_id, chat_id) as data:
            child_telegram_id = data.get('selected_child_id')
            deed_description = data.get('deed_description', '–î–æ–±—Ä–æ–µ –¥–µ–ª–æ')
        
        if not child_telegram_id:
            await bot.send_message(
                chat_id,
                "‚ùå –û—à–∏–±–∫–∞: –Ω–µ –≤—ã–±—Ä–∞–Ω —Ä–µ–±–µ–Ω–æ–∫. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞—á–Ω–∏—Ç–µ –∑–∞–Ω–æ–≤–æ —Å /parent."
            )
            
            # –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
            await bot.delete_state(user_id, chat_id)
            return
        
        child = await get_child(child_telegram_id)
        
        # –°–æ–∑–¥–∞–µ–º –∑–∞–ø–∏—Å—å –æ –¥–æ–±—Ä–æ–º –¥–µ–ª–µ
        deed = await create_deed(
            child,
            deed_description,
            points,
            parent
        )
        
        # –û–±–Ω–æ–≤–ª—è–µ–º –æ–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –±–∞–ª–ª–æ–≤
        total_points = await update_child_points(child, points)
        
        await bot.send_message(
            chat_id,
            f"üéâ –î–æ–±—Ä–æ–µ –¥–µ–ª–æ –¥–ª—è {child.name} —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–æ!\n\n"
            f"–î–æ–±—Ä–æ–µ –¥–µ–ª–æ: *{deed_description}*\n"
            f"–ë–∞–ª–ª—ã: *+{points}*\n"
            f"–í—Å–µ–≥–æ —É —Ä–µ–±–µ–Ω–∫–∞ —Ç–µ–ø–µ—Ä—å *{total_points} –±–∞–ª–ª–æ–≤*.\n\n"
            "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /parent –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –º–µ–Ω—é —Ä–æ–¥–∏—Ç–µ–ª—è.",
            parse_mode='Markdown'
        )
        
        # –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
        await bot.delete_state(user_id, chat_id)
        
    except ValueError:
        await bot.send_message(
            chat_id,
            "‚ùå –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑:"
        )
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –±–∞–ª–ª–æ–≤ –æ—Ç —Ä–æ–¥–∏—Ç–µ–ª—è: {e}")
        await bot.send_message(
            chat_id,
            "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑ –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ /start –¥–ª—è –Ω–∞—á–∞–ª–∞."
        )
        await bot.delete_state(user_id, chat_id)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /cancel
@bot.message_handler(commands=['cancel'])
async def cancel_command(message):
    user_id = message.from_user.id
    chat_id = message.chat.id
    
    # –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    await bot.delete_state(user_id, chat_id)
    
    await bot.send_message(
        chat_id,
        "‚ùå –î–µ–π—Å—Ç–≤–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /start –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é."
    )

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –≤–µ–±—Ö—É–∫–∞
async def process_telegram_update(json_data):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç JSON-–¥–∞–Ω–Ω—ã–µ –æ—Ç Telegram webhook"""
    from telebot.types import Update
    update = Update.de_json(json_data)
    await bot.process_new_updates([update])